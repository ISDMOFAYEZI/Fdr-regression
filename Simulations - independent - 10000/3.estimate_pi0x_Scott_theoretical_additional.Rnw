\documentclass{article}

\begin{document}

<<setup, include=FALSE, cache=FALSE>>=
# this is equivalent to \SweaveOpts{...}
opts_chunk$set(fig.path='Figures/', fig.align='center', fig.show='hold')
options(replace.assign=TRUE,width=60)
@

<<prelims>>=
## Load libraries
library(splines)
library(MASS)
library(FDRreg)
library(curl)

library(doParallel) ##to make cluster (on Windows)
library(foreach) ##to use foreach function that does the parallel processing
library(doRNG) ##for reproducible seeds when doing parallel processing

##Source functions
source("../functions.R")
@

Define nulltype for Scott method:
<<>>=
nulltype <- "theoretical"
@

Simulations are performed for a variety of alternative distributions:
<<>>=
alts <- c("alt_beta","alt_chisq_large_3_3","alt_chisq_large",
          "alt_chisq_small_3_3","alt_chisq_small",
          "alt_t_large","alt_t_small",
          "alt_z_large",
          "alt_z_small")
@

\section{Probability of being a false positive is linear}

Perform estimation and save estimates:

<<>>=
for(alt in alts[6:9])
{
  print(alt)
  load(paste(alt,"simResults_5.RData",sep="/"))
  ntest <- ncol(zValuesSims)

  pi0hatScottMat <- estimate_Scott_sims(zValuesSims, tme, nulltype)

  pi0hatScottMean <- colMeans(pi0hatScottMat[,1:ntest])
  pi0hatScottVar <- apply(pi0hatScottMat[,1:ntest],2,var)
  
  pi0hat.ScottMat <- pi0hatScottMat[,1:ntest]
  FDR.ScottMat <- pi0hatScottMat[,(ntest+1):(2*ntest)]
  
  ##save full results
  save(file=paste(alt,"simResults_pi0x_Scott_5_full.RData",sep="/"), 
       list=c("pi0hat.ScottMat", "FDR.ScottMat"))
  
  ##save summary results
  save(file=paste(alt,"simResults_pi0x_Scott_5.RData",sep="/"), 
       list=c("tme", "pi0", 
            "pi0hatScottMean","pi0hatScottVar"))
}
@

Session info:
<<sessInf>>=
devtools::session_info()
@

\end{document}
