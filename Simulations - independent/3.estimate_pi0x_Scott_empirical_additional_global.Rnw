\documentclass{article}

\begin{document}

<<setup, include=FALSE, cache=FALSE>>=
# this is equivalent to \SweaveOpts{...}
opts_chunk$set(fig.path='Figures/', fig.align='center', fig.show='hold')
options(replace.assign=TRUE,width=60)
@

<<prelims>>=
## Load libraries
library(splines)
library(MASS)
library(FDRreg)
library(curl)

library(doParallel) ##to make cluster (on Windows)
library(foreach) ##to use foreach function that does the parallel processing
library(doRNG) ##for reproducible seeds when doing parallel processing

##Source functions
source("../functions.R")

options(warn=1)
@

Define nulltype for Scott method:
<<>>=
nulltype <- "empirical"
@

Nothing from alternative distribution, since this is for the global null:
<<>>=
folder <- "global_null"
@

\section{Probability of being a false positive is 1}

Perform estimation and save estimates:

<<>>=
set.seed(880184)

print(folder)

load(paste(folder,"simResults_0.RData",sep="/"))
ntest <- ncol(zValuesSims)

pi0hatScottMat_emp <- estimate_Scott_sims(zValuesSims, tme, nulltype)

pi0hatScottMean_emp <- colMeans(pi0hatScottMat_emp[,1:ntest])
pi0hatScottVar_emp <- apply(pi0hatScottMat_emp[,1:ntest],2,var)

pi0hat.ScottMat_emp <- pi0hatScottMat_emp[,1:ntest]
FDR.ScottMat_emp <- pi0hatScottMat_emp[,(ntest+1):(2*ntest)]

##save full results
save(file=paste(folder,"simResults_pi0x_Scott_emp_0_full.RData",sep="/"), 
     list=c("pi0hat.ScottMat_emp", "FDR.ScottMat_emp"))

##save summary results
save(file=paste(folder,"simResults_pi0x_Scott_emp_0.RData",sep="/"), 
     list=c("tme", "pi0", 
            "pi0hatScottMean_emp","pi0hatScottVar_emp"))
@

Session info:
<<sessInf>>=
devtools::session_info()
@

\end{document}
